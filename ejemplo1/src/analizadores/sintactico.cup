package analizadores; 
import java_cup.runtime.*;
import aplicacion.*;

parser code 
{:

    public int contadorNodo = 0;
    public String salida = "";

    public nodo nodoSalida;
    public nodo getSalida(){
        return nodoSalida;
    }
    
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String ptcoma,parizq,parder;
terminal String mas,menos,por,dividido;
terminal String entero;
terminal String decimal;
terminal String calcular;

non terminal nodo INICIO;
non terminal nodo EXP;

precedence left mas,menos;
precedence left por,dividido;

start with INICIO; 

INICIO::=EXP:var1 {:nodoSalida=var1;:};

EXP  ::= EXP:var1 mas EXP:var2          {: RESULT=new nodo(contadorNodo, "SUMA", var1, var2); 
                                            contadorNodo++;
                                        :}
    | EXP:var1 menos EXP:var2           {: RESULT=new nodo(contadorNodo, "RESTA", var1, var2);
                                            contadorNodo++;
                                        :}
    | EXP:var1 por EXP:var2             {: RESULT=new nodo(contadorNodo, "MULTIPLICACION", var1, var2);
                                            contadorNodo++;
                                        :}
    | EXP:var1 dividido EXP:var2        {: RESULT=new nodo(contadorNodo, "DIVISION", var1, var2);
                                            contadorNodo++;
                                        :}
    | entero:var1                       {: RESULT=new nodo(contadorNodo, "VALOR", new Double(var1));
                                            contadorNodo++;
                                        :}
    | decimal:var1                      {: RESULT=new nodo(contadorNodo, "VALOR", new Double(var1));
                                            contadorNodo++;
                                        :}
    | parizq EXP:var1 parder            {: RESULT=var1;
                                            contadorNodo++;
                                        :};

VARIABLE: id:var1 ptcoma {: RESULT= new atributo(proyecto1, "VARIABLE", var1, null); :}